

function f_downloadTar {
	typeset tar=$1
	typeset url=$2
	
	cd $lib_root
	wget $url
	tar -xvf $tar
	rm $tar
}

function f_downloadJar {
	typeset url=$1
	
	curl -O $url
}

function f_replaceLine {
	typeset oldLine=$1
	typeset newLine=$2
	typeset filename=$3
	typeset admin=$4
	
	$admin sed -i "/${oldLine}/c${newLine}" $filename
}

function f_generatePrivateKey {
	cd ~/.ssh
	typeset publicKeyFilename="id_rsa.pub"
	if [[ ! -f $publicKeyFilename ]]; then
		ssh-keygen -f id_rsa -N '' # flags -f,-N are to bypass prompt
		cat $publicKeyFilename >> authorized_keys
	fi
}

function f_aws_install_ant {
    # sudo yum install ant - is installing 1.8 and we need 1.9
    # download binary file @ http://archive.apache.org/dist/ant/binaries/ or www.apache.org/dist/ant/binaries
    echo "installing ant"
    typeset ant_version="apache-ant-1.10.0"
    typeset ant_tar=$ant_version-bin.tar.bz2
    f_downloadTar "$ant_tar" "http://archive.apache.org/dist/ant/binaries/$ant_tar"
    f_fillInBuildConfigVariable "ANT_9_HOME" "$LIB_ROOT/$ant_version"
}

function f_aws_install_zk {
    echo "installing zk"
    typeset zk_version="zookeeper-3.4.11"
    typeset zk_tar=$zk_version.tar.gz
    f_downloadTar "$zk_tar" "http://apache.claz.org/zookeeper/$zk_version/$zk_tar"

    cd $zk_version/conf
    echo "tickTime=2000
    dataDir=/var/tmp/zookeeper
    clientPort=2181" > zoo.cfg
}

function f_aws_fillin_vars {        
    f_fillInBuildConfigVariable "SK_REPO_HOME" "$sk_repo_home"
    f_fillInBuildConfigVariable "PERL_5_8"     "/usr/bin/perl"
}

function f_aws_install_and_symlink_boost {
    echo "installing boost"
    typeset boost_version="boost_1_61_0"
    typeset boost_tar=$boost_version.tar.gz
    f_downloadTar "$boost_tar" "https://versaweb.dl.sourceforge.net/project/boost/boost/1.61.0/$boost_tar"
    
    cd $LIB_ROOT
    typeset boost_lib=libs/boost
    mkdir -p $boost_lib
    cd $boost_lib
    ln -s /usr/lib64/libboost_thread-mt.so.1.53.0    libboost_thread.so
    ln -s /usr/lib64/libboost_date_time-mt.so.1.53.0 libboost_date_time.so
    ln -s /usr/lib64/libboost_system-mt.so.1.53.0    libboost_system.so

    f_overrideBuildConfigVariable "BOOST_INC" "$LIB_ROOT/$boost_version"
    f_overrideBuildConfigVariable "BOOST_LIB" "$LIB_ROOT/$boost_lib"
}

function f_aws_install_jace {
    cd $LIB_ROOT
    typeset jace_runtime="jace-core-runtime"
    typeset    jace_core="jace-core-java"
    typeset jace_runtime_jar=$jace_runtime-1.2.22.jar
    typeset    jace_core_jar=$jace_core-1.2.22.jar
    typeset jar_url="search.maven.org/remotecontent?filepath=com/googlecode/jace"
    f_downloadJar "$jar_url/$jace_runtime/1.2.22/$jace_runtime_jar"
    f_downloadJar "$jar_url/$jace_core/1.2.22/$jace_core_jar"
}

function f_aws_symlink_jace {
    cd $LIB_ROOT
    typeset jace_lib=libs/jace
    mkdir -p $jace_lib
    cd $jace_lib
    ln -s $sk_repo_home/src/jace/include include
    mkdir lib
    cd lib
    ln -s ../../../$jace_runtime_jar jace-runtime.jar
    ln -s ../../../$jace_core_jar    jace-core.jar
    mv $INSTALL_ARCH_LIB_DIR/jace/dynamic .
    f_fillInBuildConfigVariable "JACE_HOME" "$LIB_ROOT/$jace_lib"
}

function f_aws_fillin_build_client {
    typeset gpp_path=$1

    echo "BUILD CLIENT"
    f_fillInBuildConfigVariable "GPP"         "$gpp_path"
    f_fillInBuildConfigVariable "GCC_LIB"     "/usr/lib/gcc/x86_64-amazon-linux/4.8.5"
}

function f_aws_edit_configs {
    f_fillInSkfsConfigVariable   "fuseLib" "$FUSE_LIB"
    f_fillInSkfsConfigVariable   "fuseBin" "/bin"
    f_fillInSkConfig

    f_replaceLine "user_allow_other" "user_allow_other" "/etc/fuse.conf" "sudo"
}

function f_aws_skc {
    cd $LIB_DIR
    ln -s $SILVERKING_JAR
}

LIB_ROOT=~
NONLAUNCH_HOST_LIST_FILENAME="multi_nonlaunch_machines_list.txt"